parameters:
  cpack: true
  run_tests: true
  cmake_stepvars: ''
  lslcfgs: ['default', 'ipv4only', 'ipv6only', 'ipv4_lsl100', 'ipv6_lsl100']
steps:
- task: CMake@1
  inputs:
    cmakeArgs: '--version'
- task: CMake@1
  inputs:
    cmakeArgs: '-DLSL_UNITTESTS=1 -DLSL_UNIXFOLDERS=1 ${{ parameters.cmake_stepvars }} $(cmakeargs) ..'
  displayName: 'Configure build'
- task: CMake@1
  inputs:
    cmakeArgs: '--build . -j --config Release --target install'
  displayName: 'Build files'
- ${{ if eq(parameters.cpack, 'true') }}:
  - bash: cpack
    workingDirectory: 'build'
    displayName: 'create cpack packages'
- ${{ if eq(parameters.run_tests, 'true') }}:
  - ${{ each lslcfg in parameters.lslcfgs }}:
    - bash: build/install/bin/lsl_test_exported --gtest_shuffle --gtest_output=xml:test_exported_$(Agent.JobName)_${{lslcfg}}.xml
      displayName: 'Run public API unit tests'
      timeoutInMinutes: 5
      continueOnError: true
      env:
        LSLAPICFG: testing/lslcfgs/${{lslcfg}}.cfg
    - bash: build/testing/lsl_test_internal --gtest_shuffle --gtest_output=xml:test_internal_$(Agent.JobName)_${{lslcfg}}.xml || true
      displayName: 'Run internal unit tests'
      timeoutInMinutes: 5
      continueOnError: true
      env:
        LSLAPICFG: testing/lslcfgs/${{lslcfg}}.cfg
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test_*.xml'
      failTaskOnFailedTests: false
- publish: $(System.DefaultWorkingDirectory)
  artifact: '$(Agent.JobName)_artifacts'
